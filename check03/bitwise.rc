function : void test() {
    int foo;
    int too;
    float bar;
    float tar;
    bool jo;
    bool bo;

    int res1;
    float res2;
    bool res3;

    //int | int
    res1 = foo | too;
    res1 = foo | foo;
    res1 = foo | foo | foo | too | too;
    res2 = foo | too;
    res2 = too | too;
    res3 = foo | too; //error, int not assignable to bool

    //int | float
    res1 = foo | bar; //error, second operand not int
    res1 = too | tar; //error, second operand not int
    res2 = tar | foo; //error, first operand not int
    res2 = too | bar; //error, second operand not int
    res2 = too | bar | too | bar; //error, second operand not int
    res3 = tar | foo; //error, first operand not int

    //float | float
    res1 = tar | bar; //error, operands not int
    res1 = bar | bar; //error, operands not int
    res2 = tar | tar; //error, operands not int
    res2 = bar | tar; //error, operands not int
    res2 = bar | bar | tar | tar; //error, operands not int
    res3 = bar | bar; //error, operands not int

    //(int | float | bool) | bool
    res1 = jo | bo; //error, operands not int
    res1 = jo | foo; //error, first operand not int
    res2 = bo | tar; //error, operands not int
    res2 = bar | jo; //error, operands not int
    res3 = bo | jo; //error, operands not int
    res3 = bo | jo | bo | bo | jo; //error, operands not int
    res3 = jo | jo | bar; //error, operands not int
    res3 = bo | foo | jo; //error, first operand not int




    //int & int
    res1 = foo & too;
    res1 = foo & foo;
    res1 = foo & foo & foo & too & too;
    res2 = foo & too;
    res2 = too & too;
    res3 = foo & too; //error, int not assignable to bool

    //int & float
    res1 = foo & bar; //error, second operand not int
    res1 = too & tar; //error, second operand not int
    res2 = tar & foo; //error, first operand not int
    res2 = too & bar; //error, second operand not int
    res2 = too & bar & too & bar; //error, second operand not int
    res3 = tar & foo; //error, first operand not int

    //float & float
    res1 = tar & bar; //error, operands not int
    res1 = bar & bar; //error, operands not int
    res2 = tar & tar; //error, operands not int
    res2 = bar & tar; //error, operands not int
    res2 = bar & bar & tar & tar; //error, operands not int
    res3 = bar & bar; //error, operands not int

    //(int & float & bool) & bool
    res1 = jo & bo; //error, operands not int
    res1 = jo & foo; //error, first operand not int
    res2 = bo & tar; //error, operands not int
    res2 = bar & jo; //error, operands not int
    res3 = bo & jo; //error, operands not int
    res3 = bo & jo & bo & bo & jo; //error, operands not int
    res3 = jo & jo & bar; //error, operands not int
    res3 = bo & foo & jo; //error, first operand not int




    //int ^ int
    res1 = foo ^ too;
    res1 = foo ^ foo;
    res1 = foo ^ foo ^ foo ^ too ^ too;
    res2 = foo ^ too;
    res2 = too ^ too;
    res3 = foo ^ too; //error, int not assignable to bool

    //int ^ float
    res1 = foo ^ bar; //error, second operand not int
    res1 = too ^ tar; //error, second operand not int
    res2 = tar ^ foo; //error, first operand not int
    res2 = too ^ bar; //error, second operand not int
    res2 = too ^ bar ^ too ^ bar; //error, second operand not int
    res3 = tar ^ foo; //error, first operand not int

    //float ^ float
    res1 = tar ^ bar; //error, operands not int
    res1 = bar ^ bar; //error, operands not int
    res2 = tar ^ tar; //error, operands not int
    res2 = bar ^ tar; //error, operands not int
    res2 = bar ^ bar ^ tar ^ tar; //error, operands not int
    res3 = bar ^ bar; //error, operands not int

    //(int ^ float ^ bool) ^ bool
    res1 = jo ^ bo; //error, operands not int
    res1 = jo ^ foo; //error, first operand not int
    res2 = bo ^ tar; //error, operands not int
    res2 = bar ^ jo; //error, operands not int
    res3 = bo ^ jo; //error, operands not int
    res3 = bo ^ jo ^ bo ^ bo ^ jo; //error, operands not int
    res3 = jo ^ jo ^ bar; //error, operands not int
    res3 = bo ^ foo ^ jo; //error, first operand not int
}
